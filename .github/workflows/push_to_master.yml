name: 'Infra & code'

on:
  push:
    branches:
    - master
  pull_request:   #storage account,service principal (sdk),folder infra,konfiguracja env ,terraform init
    

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    env:
      ARM_TENANT_ID: fcb3dfcf-1704-4438-9cd6-28e96201a2c1
      ARM_SUBSCRIPTION_ID: c4968192-f624-4c20-a0fe-36fde405fa62
      ARM_CLIENT_ID: b0f2c47b-593c-4949-9b0a-4fe2917e5951
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_ACCESS_KEY: ${{ secrets.TF_ARM_ACCESS_KEY }}
      working-directory: ./infra

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: |
        terraform init \
        -backend-config="storage_account_name=terraformaz400tst" \
        -backend-config="container_name=terraform" \
        -backend-config="key=infra.terraform" 
      working-directory: ${{ env.working-directory }}

    # # Checks that all Terraform configuration files adhere to a canonical format
  #  - name: Terraform Format
  #    run: terraform fmt -check
  #   working-directory: ${{ env.working-directory }}

    # # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      working-directory: ${{ env.working-directory }}


    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ${{ env.working-directory }}


  check:
    name: 'Check'
    needs: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    env:
      ARM_TENANT_ID: fcb3dfcf-1704-4438-9cd6-28e96201a2c1
      ARM_SUBSCRIPTION_ID: c4968192-f624-4c20-a0fe-36fde405fa62
    #  ARM_CLIENT_ID: b0f2c47b-593c-4949-9b0a-4fe2917e5951
    #  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Check plans
      run: az appservice plan list
